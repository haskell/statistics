cabal-version:  3.0
build-type:     Simple

name:           statistics
version:        0.16.3.0
synopsis:       A library of statistical types, data, and functions
description:
  This library provides a number of common functions and types useful
  in statistics.  We focus on high performance, numerical robustness,
  and use of good algorithms.  Where possible, we provide
  references to the statistical literature.
  .
  The library's facilities can be divided into four broad categories:
  .
  * Working with widely used discrete and continuous probability
    distributions.  (There are dozens of exotic distributions in use;
    we focus on the most common.)
  .
  * Computing with sample data: quantile estimation, kernel density
    estimation, histograms, bootstrap methods, significance testing,
    and regression and autocorrelation analysis.
  .
  * Random variate generation under several different distributions.
  .
  * Common statistical tests for significant differences between
    samples.

license:        BSD-2-Clause
license-file:   LICENSE
homepage:       https://github.com/haskell/statistics
bug-reports:    https://github.com/haskell/statistics/issues
author:         Bryan O'Sullivan <bos@serpentine.com>, Alexey Khudaykov <alexey.skladnoy@gmail.com>
maintainer:     Alexey Khudaykov <alexey.skladnoy@gmail.com>
copyright:      2009-2014 Bryan O'Sullivan
category:       Math, Statistics

extra-source-files:
  README.markdown
  examples/kde/KDE.hs
  examples/kde/data/faithful.csv
  examples/kde/kde.html
  examples/kde/kde.tpl
  tests/utils/Makefile
  tests/utils/fftw.c

extra-doc-files:
  changelog.md

tested-with:
  GHC ==8.4.4
   || ==8.6.5
   || ==8.8.4
   || ==8.10.7
   || ==9.0.2
   || ==9.2.8
   || ==9.4.8
   || ==9.6.6
   || ==9.8.4
   || ==9.10.1

source-repository head
  type:     git
  location: https://github.com/haskell/statistics

flag BenchPAPI
  Description: Enable building of benchmarks which use instruction counters.
               It requires libpapi and only works on Linux so it's protected by flag
  Default: False
  Manual:  True

library
  default-language: Haskell2010
  exposed-modules:
    Statistics.Autocorrelation
    Statistics.ConfidenceInt
    Statistics.Correlation
    Statistics.Correlation.Kendall
    Statistics.Distribution
    Statistics.Distribution.Beta
    Statistics.Distribution.Binomial
    Statistics.Distribution.CauchyLorentz
    Statistics.Distribution.ChiSquared
    Statistics.Distribution.DiscreteUniform
    Statistics.Distribution.Exponential
    Statistics.Distribution.FDistribution
    Statistics.Distribution.Gamma
    Statistics.Distribution.Geometric
    Statistics.Distribution.Hypergeometric
    Statistics.Distribution.Laplace
    Statistics.Distribution.Lognormal
    Statistics.Distribution.NegativeBinomial
    Statistics.Distribution.Normal
    Statistics.Distribution.Poisson
    Statistics.Distribution.StudentT
    Statistics.Distribution.Transform
    Statistics.Distribution.Uniform
    Statistics.Distribution.Weibull
    Statistics.Function
    Statistics.Quantile
    Statistics.Regression
    Statistics.Resampling
    Statistics.Resampling.Bootstrap
    Statistics.Sample
    Statistics.Sample.Internal
    Statistics.Sample.Histogram
    Statistics.Sample.KernelDensity
    Statistics.Sample.KernelDensity.Simple
    Statistics.Sample.Normalize
    Statistics.Sample.Powers
    Statistics.Test.Bartlett
    Statistics.Test.Levene
    Statistics.Test.ChiSquared
    Statistics.Test.KolmogorovSmirnov
    Statistics.Test.KruskalWallis
    Statistics.Test.MannWhitneyU
--    Statistics.Test.Runs
    Statistics.Test.StudentT
    Statistics.Test.Types
    Statistics.Test.WilcoxonT
    Statistics.Transform
    Statistics.Types
  other-modules:
    Statistics.Distribution.Poisson.Internal
    Statistics.Internal
    Statistics.Test.Internal
    Statistics.Types.Internal
  build-depends: base                    >= 4.9 && < 5
                 --
               , math-functions          >= 0.3.4.1
               , mwc-random              >= 0.15.0.0
               , random                  >= 1.2
                 --
               , aeson                   >= 0.6.0.0
               , async                   >= 2.2.2 && <2.3
               , deepseq                 >= 1.1.0.2
               , binary                  >= 0.5.1.0
               , primitive               >= 0.3
               , dense-linear-algebra    >= 0.1 && <0.2
               , parallel                >= 3.2.2.0 && <3.3
               , vector                  >= 0.10
               , vector-algorithms       >= 0.4
               , vector-th-unbox
               , vector-binary-instances >= 0.2.1
               , data-default-class      >= 0.1.2

  -- Older GHC
  if impl(ghc < 7.6)
    build-depends:
      ghc-prim
  ghc-options: -O2 -Wall -fwarn-tabs -funbox-strict-fields

test-suite statistics-tests
  default-language: Haskell2010
  type:           exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is:        tests.hs
  other-modules:
    Tests.ApproxEq
    Tests.Correlation
    Tests.Distribution
    Tests.ExactDistribution
    Tests.Function
    Tests.Helpers
    Tests.KDE
    Tests.Matrix
    Tests.Matrix.Types
    Tests.NonParametric
    Tests.NonParametric.Table
    Tests.Orphanage
    Tests.Parametric
    Tests.Serialization
    Tests.Transform
    Tests.Quantile
  ghc-options:
    -Wall -threaded -rtsopts -fsimpl-tick-factor=500
  build-depends: base
               , statistics
               , dense-linear-algebra
               , QuickCheck >= 2.7.5
               , binary
               , erf
               , aeson
               , ieee754 >= 0.7.3
               , math-functions
               , primitive
               , tasty
               , tasty-hunit
               , tasty-quickcheck
               , tasty-expected-failure
               , vector
               , vector-algorithms

test-suite statistics-doctests
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  hs-source-dirs:   tests
  main-is:          doctest.hs
  if impl(ghcjs) || impl(ghc < 8.0)
    Buildable: False
  -- Linker on macos prints warnings to console which confuses doctests.
  -- We simply disable doctests on ma for older GHC
  -- > warning: -single_module is obsolete
  if os(darwin) && impl(ghc < 9.6)
    buildable: False
  build-depends:
            base       -any
          , statistics -any
          , doctest    >=0.15 && <0.24

-- We want to be able to build benchmarks using both tasty-bench and tasty-papi.
-- They have similar API so we just create two shim modules which reexport
-- definitions from corresponding library and pick one in cabal file.
common bench-stanza
  ghc-options:      -Wall
  default-language: Haskell2010
  build-depends: base < 5
               , vector          >= 0.12.3
               , statistics
               , mwc-random
               , tasty           >=1.3.1

benchmark statistics-bench
  import:         bench-stanza
  type:           exitcode-stdio-1.0
  hs-source-dirs: benchmark bench-time
  main-is:        bench.hs
  Other-modules:  Bench
  build-depends:  tasty-bench >= 0.3

benchmark statistics-bench-papi
  import:         bench-stanza
  type:           exitcode-stdio-1.0
  if impl(ghcjs) || !flag(BenchPAPI)
     buildable: False
  hs-source-dirs: benchmark bench-papi
  main-is:        bench.hs
  Other-modules:  Bench
  build-depends:  tasty-papi >= 0.1.2
